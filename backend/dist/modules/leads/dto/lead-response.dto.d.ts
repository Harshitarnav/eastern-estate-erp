import { Lead } from '../entities/lead.entity';
export declare class LeadResponseDto {
    id: string;
    leadCode: string;
    firstName: string;
    lastName: string;
    email: string;
    phone: string;
    alternatePhone: string;
    address: string;
    city: string;
    state: string;
    pincode: string;
    status: string;
    source: string;
    priority: string;
    leadScore: number;
    notes: string;
    propertyId: string;
    interestedPropertyTypes: string;
    budgetMin: number;
    budgetMax: number;
    preferredLocation: string;
    requirements: string[];
    expectedPurchaseDate: string | Date;
    lastContactedAt: string | Date;
    nextFollowUpDate: string | Date;
    followUpNotes: string;
    assignedTo: string;
    assignedAt: string | Date;
    isQualified: boolean;
    isFirstTimeBuyer: boolean;
    hasExistingProperty: boolean;
    needsHomeLoan: boolean;
    hasApprovedLoan: boolean;
    currentOccupation: string;
    annualIncome: number;
    campaignName: string;
    utmSource: string;
    utmMedium: string;
    utmCampaign: string;
    tags: string[];
    referredBy: string;
    referralName: string;
    referralPhone: string;
    hasSiteVisit: boolean;
    siteVisitDate: string | Date;
    siteVisitFeedback: string;
    totalSiteVisits: number;
    totalCalls: number;
    totalEmails: number;
    totalMeetings: number;
    lastCallDate: string | Date;
    lastEmailDate: string | Date;
    lastMeetingDate: string | Date;
    convertedToCustomerId: string;
    convertedAt: string | Date;
    lostReason: string;
    lostAt: string | Date;
    isActive: boolean;
    createdAt: string | Date;
    updatedAt: string | Date;
    property?: any;
    assignedUser?: any;
    static fromEntity(lead: Lead): LeadResponseDto;
    static fromEntities(leads: Lead[]): LeadResponseDto[];
}
export interface PaginatedLeadsResponse {
    data: LeadResponseDto[];
    meta: {
        total: number;
        page: number;
        limit: number;
        totalPages: number;
    };
}
