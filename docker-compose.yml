# version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: eastern_estate_db
    environment:
      POSTGRES_USER: eastern_estate
      POSTGRES_PASSWORD: your_secure_password_here
      POSTGRES_DB: eastern_estate_erp
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U eastern_estate"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: eastern_estate_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO (Self-hosted S3)
  minio:
    image: minio/minio:latest
    container_name: eastern_estate_minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Backend API (will add after development)
  # backend:
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3001:3001"
  #   depends_on:
  #     - postgres
  #     - redis
  #     - minio
  #   environment:
  #     NODE_ENV: production

  # Frontend (will add after development)
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - backend

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  default:
    name: eastern_estate_network